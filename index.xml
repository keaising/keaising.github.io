<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>About on 流水沉微</title>
    <link>https://shuxiao.wang/</link>
    <description>Recent content in About on 流水沉微</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cn</language>
    <lastBuildDate>Tue, 14 May 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://shuxiao.wang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2. Add Two Numbers</title>
      <link>https://shuxiao.wang/leetcode/2.-add-two-numbers/</link>
      <pubDate>Thu, 03 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/leetcode/2.-add-two-numbers/</guid>
      <description>Explain You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.
You may assume the two numbers do not contain any leading zero, except the number 0 itself.
Example
Input: (2 -&amp;gt; 4 -&amp;gt; 3) + (5 -&amp;gt; 6 -&amp;gt; 4)
Output: 7 -&amp;gt; 0 -&amp;gt; 8</description>
    </item>
    
    <item>
      <title>Cloud</title>
      <link>https://shuxiao.wang/cloud/</link>
      <pubDate>Tue, 14 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/cloud/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Eureka!</title>
      <link>https://shuxiao.wang/eureka/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/eureka/</guid>
      <description></description>
    </item>
    
    <item>
      <title>9. Palindrome Number</title>
      <link>https://shuxiao.wang/leetcode/9.-palindrome-number/</link>
      <pubDate>Sat, 19 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/leetcode/9.-palindrome-number/</guid>
      <description>Explain Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward.
Example 1
Input: 121
Output: true
Example 2
Input: -121
Output: false
Explanation: From left to right, it reads -121. From right to left, it &amp;gt; becomes 121-.
Therefore it is not a palindrome.
Example 3
Input: 10
Output: false
Explanation: Reads 01 from right to left. Therefore it is not a palindrome.</description>
    </item>
    
    <item>
      <title>21. Merge Two Sorted Lists</title>
      <link>https://shuxiao.wang/leetcode/21.-merge-two-sorted-lists/</link>
      <pubDate>Wed, 02 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/leetcode/21.-merge-two-sorted-lists/</guid>
      <description>Explain Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists. Example Input: 1-&amp;gt;2-&amp;gt;4, 1-&amp;gt;3-&amp;gt;4 Output: 1-&amp;gt;1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;4 Solve # Definition for singly-linked list. # class ListNode: # def __init__(self, x): # self.val = x # self.next = None class Solution: def mergeTwoLists(self, l1: ListNode, l2: ListNode) -&amp;gt; ListNode: if not l1: return</description>
    </item>
    
    <item>
      <title>2020年读书情况</title>
      <link>https://shuxiao.wang/book/plan-2020/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/book/plan-2020/</guid>
      <description>读书计划 读书计划中的只是准备认真读完并完成作业的，其他的书一般都在豆瓣我读 书名 类型 介绍 EOPL 编程语言 Essentials of Programming Languages Algs4 算法 数据结构 Algorithms CSAPP 计算机结构 深入理解</description>
    </item>
    
    <item>
      <title>Sams Teach Yourself TCP/IP in 24 Hours</title>
      <link>https://shuxiao.wang/book/tcpip-in-24-hours/</link>
      <pubDate>Sat, 26 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/book/tcpip-in-24-hours/</guid>
      <description>在我学习 TCP/IP 协议的道路上遇到过很多书，随便拎一本出来都是振聋发聩的作品： TCP/IP详解 卷1：协议 图解TCP/IP（第5版） TCP/IP详解 卷</description>
    </item>
    
    <item>
      <title>142. Linked List Cycle II</title>
      <link>https://shuxiao.wang/leetcode/142.-linked-list-cycle-ii/</link>
      <pubDate>Wed, 02 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/leetcode/142.-linked-list-cycle-ii/</guid>
      <description>Explain Given a linked list, return the node where the cycle begins. If there is no cycle, return null.
To represent a cycle in the given linked list, we use an integer pos which represents the position (0-indexed) in the linked list where tail connects to. If pos is -1, then there is no cycle in the linked list.
Note:
Do not modify the linked list.
Solve # Definition for singly-linked list.</description>
    </item>
    
    <item>
      <title>146. LRU Cache</title>
      <link>https://shuxiao.wang/leetcode/146.-lru-cache/</link>
      <pubDate>Wed, 02 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/leetcode/146.-lru-cache/</guid>
      <description>LRU 来自于 Cache replacement policies，是缓存淘汰策略的一种，很实用也有比较简洁的实现方法，用来面试正好，足够难、又足够简单 Explain Design and implement a data structure for Least Recently Used (LRU) cache.</description>
    </item>
    
    <item>
      <title>编程语言精要</title>
      <link>https://shuxiao.wang/book/eopl/</link>
      <pubDate>Sun, 27 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/book/eopl/</guid>
      <description>基于种种原因，决定还是静下心来读一读以前想读但是一直没读的书，首先是这本Essentials of Programming Languages, 3rd Edition 从EOPL开始而不是SICP开始，是感</description>
    </item>
    
    <item>
      <title>第一章 归纳的数据集</title>
      <link>https://shuxiao.wang/book/eopl1/</link>
      <pubDate>Tue, 19 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/book/eopl1/</guid>
      <description>本章介绍了一些基本的编程工具，这些工具在后续编写解释器(interpreters)、检查器(checkers)和类似组成编程语言核心处理器(</description>
    </item>
    
    <item>
      <title>208. Implement Trie (Prefix Tree)</title>
      <link>https://shuxiao.wang/leetcode/208.-implement-trie/</link>
      <pubDate>Wed, 02 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/leetcode/208.-implement-trie/</guid>
      <description>Explain Implement a trie with insert, search, and startsWith methods. Example Trie trie = new Trie(); trie.insert(&amp;#34;apple&amp;#34;); trie.search(&amp;#34;apple&amp;#34;); // returns true trie.search(&amp;#34;app&amp;#34;); // returns false trie.startsWith(&amp;#34;app&amp;#34;); // returns true trie.insert(&amp;#34;app&amp;#34;); trie.search(&amp;#34;app&amp;#34;); // returns true Note You may assume that all inputs are consist of lowercase letters a-z. All inputs are guaranteed to be non-empty strings. Solve class Node: def __init__(self): self.children = {} self.is_word = False class Trie: def __init__(self):</description>
    </item>
    
    <item>
      <title>236. Lowest Common Ancestor of a Binary Tree</title>
      <link>https://shuxiao.wang/leetcode/236.-lowest-common-ancestor-of-a-binary-tree/</link>
      <pubDate>Wed, 02 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/leetcode/236.-lowest-common-ancestor-of-a-binary-tree/</guid>
      <description>Explain Given a binary tree, find the lowest common ancestor (LCA) of two given nodes in the tree. According to the definition of LCA on Wikipedia: “The lowest common ancestor is defined between two nodes p and q as the lowest node in T that has both p and q as descendants (where we allow a node to be a descendant of itsel</description>
    </item>
    
    <item>
      <title>334. Increasing Triplet Subsequence</title>
      <link>https://shuxiao.wang/leetcode/334.-increasing-triplet-subsequence/</link>
      <pubDate>Wed, 02 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/leetcode/334.-increasing-triplet-subsequence/</guid>
      <description>这是我在搜索 trie tree 的时候弹出来到一个题，乍一看觉得挺简单，但是对时间和空间都有要求，我能想到到办法就是以每个数为第一个数开始向后搜索，但是这样</description>
    </item>
    
    <item>
      <title>房贷是对普通人的欺负</title>
      <link>https://shuxiao.wang/posts/housing-load-is-a-bully/</link>
      <pubDate>Wed, 13 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/housing-load-is-a-bully/</guid>
      <description>首先需要谈一个我观察到的现象：普通人对超过自己日常生活的数字是没有概念的。比如一个居住在三线小县城的人，日常生活只是买菜做饭，最大额的收入是</description>
    </item>
    
    <item>
      <title>为什么我们不生小孩</title>
      <link>https://shuxiao.wang/posts/why-no-new-baby/</link>
      <pubDate>Sun, 16 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/why-no-new-baby/</guid>
      <description>在当前的时刻看来，年轻人不想生小孩的意愿是越来越强烈了，整个国家的生育率也是逐步走低，这让我们的父母和祖父母们觉得难以接受：生活跟以前比明明</description>
    </item>
    
    <item>
      <title>CuriosityChina 招人</title>
      <link>https://shuxiao.wang/posts/work-with-curiosity-china/</link>
      <pubDate>Sat, 21 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/work-with-curiosity-china/</guid>
      <description>目前我在一家小公司（CuriosityChina）工作，能挣一些钱，可以做的事也很多，但我们开发团队目前人比较少，所以需要招前后端开发、SR</description>
    </item>
    
    <item>
      <title>推着生活前进</title>
      <link>https://shuxiao.wang/posts/push/</link>
      <pubDate>Sat, 07 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/push/</guid>
      <description>4年前我毕业时很不顺利，入职时一个月的工资很低，交完房租剩下的基本上只够糊口，那年还跟我爸要了两万块钱才回家过了春节。再加上入职就遇上部门调</description>
    </item>
    
    <item>
      <title>中文编程届四大暗黑天王</title>
      <link>https://shuxiao.wang/posts/king-in-the-dark/</link>
      <pubDate>Sat, 10 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/king-in-the-dark/</guid>
      <description>序言 中文编程届四大暗黑天王是指：胡正、李杀、王垠和田春冰河 这四大天王成名时期基本都在 2000 年-2005 年之间，还都特别能写博客和写书，每个人的网</description>
    </item>
    
    <item>
      <title>为非个人项目的 GitHub repo 设置子域名</title>
      <link>https://shuxiao.wang/posts/set-subdomain-for-github-project/</link>
      <pubDate>Sat, 05 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/set-subdomain-for-github-project/</guid>
      <description>最近在把以前的博客找回来 我从第一版博客开始，就一直在用基于 GitHub Pages和markdown的方案，最初用的静态生成器是Jekyll，但是Rub</description>
    </item>
    
    <item>
      <title>不优化，zsh 也超快</title>
      <link>https://shuxiao.wang/posts/zsh-refresh/</link>
      <pubDate>Sat, 15 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/zsh-refresh/</guid>
      <description>如果你折腾过 shell，那你肯定遇到过 oh-my-zsh，这个巨大的框架什么都好，就是有点慢。在用了一年多 oh-my-zsh 之后，我有点烦了那种卡卡的感觉，</description>
    </item>
    
    <item>
      <title>怀念祖祖</title>
      <link>https://shuxiao.wang/posts/memories/</link>
      <pubDate>Thu, 29 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/memories/</guid>
      <description>今年的冬天特别冷，家里老人们过得都很艰难，让我想起来在我还很小的时候就已经去世的祖祖。（祖祖是我们方言里对曾祖父母和外曾祖父母的称呼，此处特</description>
    </item>
    
    <item>
      <title>为工作而死是求仁得仁</title>
      <link>https://shuxiao.wang/posts/pay-as-you-request/</link>
      <pubDate>Sun, 24 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/pay-as-you-request/</guid>
      <description>这个文章的讨论目标是那些在事后声音无限大的996、福报大厂程序员们，吃饱穿暖还能考虑在北上广深买学区的人根本不是什么被吃了上顿没下顿的生活挤</description>
    </item>
    
    <item>
      <title>学区房是永动机</title>
      <link>https://shuxiao.wang/posts/school-related-house/</link>
      <pubDate>Sun, 10 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/school-related-house/</guid>
      <description>本文是一位朋友爬了北京上海近几年的住宅历史成交价格之后，得到“北京房价已经三年没有涨了、上海房价近两年涨了 20%”的结论之后，我们的一些讨论</description>
    </item>
    
    <item>
      <title>2020 就要过去</title>
      <link>https://shuxiao.wang/posts/annual-2020/</link>
      <pubDate>Sun, 27 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/annual-2020/</guid>
      <description>焦虑 这是毕业以来最不焦虑的一年，准确的说应该是在战术上或者策略上最不焦虑的一年，自认为找到了一个好团队，在好团队里呆着的一个好处是当你实力不</description>
    </item>
    
    <item>
      <title>Auto mouse keyboard</title>
      <link>https://shuxiao.wang/posts/auto-mouse-keyboard/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/auto-mouse-keyboard/</guid>
      <description>给兔子写了一个半自动化工具，让她可以自己编写流程的情况下，操作鼠标和键盘完成一系列任务。项目代码在 https://github.com/keaising/auto-mouse-keyboard/ 使用 在 Release 页面下载得到 exe 文件，将下载文件随</description>
    </item>
    
    <item>
      <title>攒钱过程中的思考</title>
      <link>https://shuxiao.wang/posts/save-money/</link>
      <pubDate>Sat, 05 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/save-money/</guid>
      <description>最近跟同学吃饭，因为经常在朋友圈发一些诸如“利好茅台！”、“收入增加全靠公司股票努力”之类阴阳怪气的话，所以被问到买基金的战绩如何以及该买什</description>
    </item>
    
    <item>
      <title>选自己想要的</title>
      <link>https://shuxiao.wang/posts/make-america-greate-again/</link>
      <pubDate>Sun, 01 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/make-america-greate-again/</guid>
      <description>在跟同学一起打 dota 的时候学习到一个说法。当时的语境是我打中单，他玩个辅助，阵容选出来之后我觉得我们的阵容不太好，比较悲观，他安慰我说： 赢比赛有</description>
    </item>
    
    <item>
      <title>买二手房首付款计算</title>
      <link>https://shuxiao.wang/posts/first-payment-in-house/</link>
      <pubDate>Fri, 26 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/first-payment-in-house/</guid>
      <description>本文的目标读者是想在北上深靠满五唯一的二手老破小落户上车的苦逼年轻人 买房是个大事，但也是个麻烦事。对于没有买过房的年轻人来说，上车的房子很可</description>
    </item>
    
    <item>
      <title>2000块搭建家庭网络——国际流量转发</title>
      <link>https://shuxiao.wang/posts/family-network-2/</link>
      <pubDate>Sat, 16 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/family-network-2/</guid>
      <description>目前用得最多的科学上网方法都是在国外找一个服务器搭建特定隧道服务，国内的机器连接到该服务器，所有或者部分流量通过该隧道传输，达到科学上网的目</description>
    </item>
    
    <item>
      <title>2000块搭建家庭网络——前言</title>
      <link>https://shuxiao.wang/posts/family-network-1/</link>
      <pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/family-network-1/</guid>
      <description>最近几个月都在远程工作，饱受移动国际出口的虐待，不管是自己的代理还是公司提供的代理都悉数挂掉，连正常查点Stack Overflow和Goog</description>
    </item>
    
    <item>
      <title>回形针到底屁股歪了几米</title>
      <link>https://shuxiao.wang/posts/nmslese/</link>
      <pubDate>Sat, 02 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/nmslese/</guid>
      <description>最近比较在Bilibili有一件比较热门的事情是回形针因为做了一期关于热带雨林的视频，被指责是「说中国人吃了太多肉导致热带雨林的消失」、「屁</description>
    </item>
    
    <item>
      <title>宅家工作的三个月</title>
      <link>https://shuxiao.wang/posts/work-from-home/</link>
      <pubDate>Fri, 01 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/work-from-home/</guid>
      <description>从二月初到北京开始，我就一直宅在家里，工作也是在家远程，每天就出门取个快递、外卖和顺路扔个垃圾，三个月来只出过三次小区 算是幸福的居家生活了，</description>
    </item>
    
    <item>
      <title>LastPass 基本用法</title>
      <link>https://shuxiao.wang/posts/introduction-to-lastpass/</link>
      <pubDate>Sat, 07 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/introduction-to-lastpass/</guid>
      <description>简介 本文目标读者是刚接触密码管理软件的用户，同时也坐在了我开的家庭计划的车上的乘客 本文目标是让你们能上手用起来这款软件，尽量平滑得从以前的密</description>
    </item>
    
    <item>
      <title>一年读书记录</title>
      <link>https://shuxiao.wang/posts/annual-2019/</link>
      <pubDate>Sat, 28 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/annual-2019/</guid>
      <description>一觉醒来发现这周末没什么事，但是仔细一想一年都已经过去了 今年翻过的书大概在200本左右，认真cover to cover读过的大概在30 - 50本，</description>
    </item>
    
    <item>
      <title>如何构建好软件</title>
      <link>https://shuxiao.wang/posts/how-to-build-good-software/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/how-to-build-good-software/</guid>
      <description>译者序 在读到此文时感觉非常不同于其他类似文章，本文的立意很高，从战略角度阐述了跟人月神话类似的观点：软件开发最重要的是保持专注和精简、控制复</description>
    </item>
    
    <item>
      <title>十号线的读书人</title>
      <link>https://shuxiao.wang/posts/reader-in-line-ten/</link>
      <pubDate>Sun, 24 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/reader-in-line-ten/</guid>
      <description>自2018年8月起，因为换工作和换住地，我就开始了环绕十号线半周的通勤生活，从进站闸机到出站闸机要50分钟，来往就是接近2个小时。无聊且网络</description>
    </item>
    
    <item>
      <title>自己的主题</title>
      <link>https://shuxiao.wang/posts/my-own-theme/</link>
      <pubDate>Thu, 07 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/my-own-theme/</guid>
      <description>终于自己做了主题 从2014年末开始，我就尝试写一点什么来记录自己，也就开始寻找做自己的博客的方法。最初使用的是jekyll，在知乎上看到有人</description>
    </item>
    
    <item>
      <title>楼梯有多少种走法</title>
      <link>https://shuxiao.wang/posts/ladder/</link>
      <pubDate>Mon, 21 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/ladder/</guid>
      <description>这是在 telegram 网鱼网咖群里聊天时，Haruhi贴的一个题，题目如下： 思路很简单 可以从14、13、12级跨到第15级 f(15)=f(14)+f(13)+f(12) 递推公式出来鸟~ 当然要得到一个</description>
    </item>
    
    <item>
      <title>Redis 复制时的 fork 的子进程</title>
      <link>https://shuxiao.wang/posts/redis-rdb-fork/</link>
      <pubDate>Fri, 13 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/redis-rdb-fork/</guid>
      <description>背景 问：Redis 主从节点同步知道吗？ 答：知道一点，不太熟 问：从节点申请同步的时候主节点做了什么？ 答：fork 一个子线程做同步 问：是子进程，</description>
    </item>
    
    <item>
      <title>A fatal communication error with WAS</title>
      <link>https://shuxiao.wang/posts/was-error/</link>
      <pubDate>Mon, 29 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/was-error/</guid>
      <description>背景情况 也是工作里遇到的一个问题，一个 host 在 IIS 上的古老项目（最早可以追溯到 16 年前），时不时会报下面这个错误： 应用程序池 “.NET” 提供服务的进</description>
    </item>
    
    <item>
      <title>P0: Golang Submission Error</title>
      <link>https://shuxiao.wang/posts/golang-submission-error/</link>
      <pubDate>Fri, 31 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/golang-submission-error/</guid>
      <description>Review 过了一段时间自己看都觉得这代码写得好蠢，于是改了一版，如下： package main import &amp;#34;fmt&amp;#34; func main() { fmt.Println(permute([]int{1,0,3})) } func permute(nums []int) [][]int { if len(nums) == 1 { return [][]int{ nums, } } array := nums var result [][]int generate(len(nums), &amp;amp;array, &amp;amp;result) return result } func generate(k int,</description>
    </item>
    
    <item>
      <title>CLI App in C# 其三</title>
      <link>https://shuxiao.wang/posts/cli-app-in-csharp3/</link>
      <pubDate>Tue, 14 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/cli-app-in-csharp3/</guid>
      <description>这是 CLI App in C# 系列的第三篇，本篇主要介绍gen的打包和发布。 .Net Core控制台应用的打包方法主要是两类： 可执行文件，对应直接运行，Windows</description>
    </item>
    
    <item>
      <title>CLI App in C# 其二</title>
      <link>https://shuxiao.wang/posts/cli-app-in-csharp2/</link>
      <pubDate>Sun, 12 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/cli-app-in-csharp2/</guid>
      <description>这是 CLI App in C# 系列的第二篇，本篇主要介绍gen的开发过程。教程里的所有代码参见keaising/gen 新建项目 在合适的地方使用dotnet new console</description>
    </item>
    
    <item>
      <title>CLI App in C# 其一</title>
      <link>https://shuxiao.wang/posts/cli-app-in-csharp1/</link>
      <pubDate>Sat, 11 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/cli-app-in-csharp1/</guid>
      <description>这是 CLI App in C# 系列的 第一篇 (Wa Da Keng) 写这个系列的目的是介绍用C#写一个命令行工具的所有内容，从规划、选型、编码、到打包和自动化编译的系列工作都会介</description>
    </item>
    
    <item>
      <title>处理dotnet core Redis超时异常</title>
      <link>https://shuxiao.wang/posts/stackexchange-redis-timeout/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/stackexchange-redis-timeout/</guid>
      <description>压力测试过程中遇到的一个问题，框架是asp.net core 2.2，redis组件是StackExchange.Redis 2.0.601，在高并发场</description>
    </item>
    
    <item>
      <title>Hero</title>
      <link>https://shuxiao.wang/cs/hero/</link>
      <pubDate>Tue, 01 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/cs/hero/</guid>
      <description> Name Hardware OS SNIPER iPhone 7 iOS TECHIES Kindle Paperwhite 2nd Android SLADAR Kindle Oasis 2nd Android MEEPO Nintendo Switch Unknown TINKER iPad mini 5th iOS SPECTRE ThinkPad X1 Tablet 3rd Windows VIPER Home PC Windows INVOKER Macbook Pro 2018 15 macOS Catalina RUBICK Home PC Arch Linux IO ThinkPad X220 Ubuntu ARC Aliyun ECS t5 Ubuntu </description>
    </item>
    
    <item>
      <title>MySQL</title>
      <link>https://shuxiao.wang/cs/mysql/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/cs/mysql/</guid>
      <description>事务 隔离级别[1] 隔离级别 脏读可能性 不可重复读可能性 幻读可能性 加锁读 读未提交 Read uncommitted ○ ○ ○ ○ 读已提交 Read committed × ○ ○ ○ 可重复读 Repeatable read × × ○ × 串行化 Serializable × ×</description>
    </item>
    
    <item>
      <title>在Eclipse中调用Algs4库</title>
      <link>https://shuxiao.wang/posts/algs4-eclipse/</link>
      <pubDate>Thu, 21 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/algs4-eclipse/</guid>
      <description>这篇是接上一篇继续讲的，上一篇讲了如何在DrJava和命令行中使用javac-algs4和java-algs4，这一篇将讲述如何在Eclip</description>
    </item>
    
    <item>
      <title>在Windows上安装「算法 第四版」组件</title>
      <link>https://shuxiao.wang/posts/algs4-windows/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/algs4-windows/</guid>
      <description>这篇日志翻译自Hello, World in Java on Windows，翻译的原因是知乎的一个回答，回答完这个问题之后，得到了广泛的。。嗯。。。私信，私信我如何处</description>
    </item>
    
    <item>
      <title>Python</title>
      <link>https://shuxiao.wang/cs/python/</link>
      <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/cs/python/</guid>
      <description>@staticmethod vs. @classmethod 2019-10-02 主要来源：Stack Overflow class A(object): def foo(self, x): print &amp;#34;executing foo(%s, %s)&amp;#34; % (self, x) @classmethod def class_foo(cls, x): print &amp;#34;executing class_foo(%s, %s)&amp;#34; % (cls, x) @staticmethod def static_foo(x): print &amp;#34;executing static_foo(%s)&amp;#34; % x a = A() a.foo(1) # executing foo(&amp;lt;__main__.A object at 0xb7dbef0c&amp;gt;,1) a.class_foo(1) # executing class_foo(&amp;lt;class &amp;#39;__main__.A&amp;#39;&amp;gt;,1) A.class_foo(1) # executing class_foo(&amp;lt;class &amp;#39;__main__.A&amp;#39;&amp;gt;,1) a.static_foo(1) # executing static_foo(1)</description>
    </item>
    
    <item>
      <title>Script</title>
      <link>https://shuxiao.wang/cs/script/</link>
      <pubDate>Thu, 01 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/cs/script/</guid>
      <description>modify latest commit author git commit --amend --author=&amp;#34;keaising &amp;lt;keaising@gmail.com&amp;gt;&amp;#34; batch-modify-git-committer.sh git filter-branch --env-filter &amp;#39; OLD_EMAIL=&amp;#34;old_email&amp;#34; CORRECT_NAME=&amp;#34;keaising&amp;#34; CORRECT_EMAIL=&amp;#34;keaising@gmail.com&amp;#34; if [ &amp;#34;$GIT_COMMITTER_EMAIL&amp;#34; = &amp;#34;$OLD_EMAIL&amp;#34; ] then export GIT_COMMITTER_NAME=&amp;#34;$CORRECT_NAME&amp;#34; export GIT_COMMITTER_EMAIL=&amp;#34;$CORRECT_EMAIL&amp;#34; fi if [ &amp;#34;$GIT_AUTHOR_EMAIL&amp;#34; = &amp;#34;$OLD_EMAIL&amp;#34; ] then export GIT_AUTHOR_NAME=&amp;#34;$CORRECT_NAME&amp;#34; export GIT_AUTHOR_EMAIL=&amp;#34;$CORRECT_EMAIL&amp;#34; fi &amp;#39; --tag-name-filter cat -- --branches --tags add key of keaising@gmail.com echo &amp;#39;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDEzQ42VEOqjtxbQ4LdArly5dDEz1tBMSaraCGuBfyGQRO5Yk6rivlbx4iIiuM0CsuAWZ/esRZKYl6hwOj3H/PanCrxOTW+mqowUHJIp9+c9FGc7ngneHytB05MaI9S49Iw51xYjRBHWrqvCGxDuggUWYHZNX5j5zy+FJxEUVZ8UQcX0lbKkJWCcMTyjkYHP4VAZygJA65TUW+rLGbA6Slh5dfZXlh7GxdjPG2WJxzJ+vcSPolDoNpoVKslTfLVgW+WFNMxE9AO6zF3K0+9k938PBp7iaDqachfyh6Wb3pz5beuBkAD9nBM0GiJD50d+SAUEpRs5DA79U0+8Jb1vkuH7ylIvXI+rcOwylfnVhUgFuPJS1bPxBrt0bKBqK2EwpFPxeKMylq8/9m+y4GE5/6uMMc0j6SYiN0f0qob1Wb5HgVl11gB9VI75L5NzuRfIiSWP5bJ9yTxjz4TL1lYGASV/WAk4KkmrpkE9HrEqVsJBxCacFZzE3rXAS11lotbEczPIgBNrRf/YN5ZQKDJne9KWBTkhzJ8ej8rlf1hm3EoKGESVByleW0elJDPAN2k+E3Bd10DL395ficJ2TXqlwxtLrp3s1xzj05Coo0tZQpnYfntqs3kPh3Lx9DNRS0JxUP4N8dGF3oSwA8d06VU9e2hG4LzQKZZ+dOief/jLUu9MQ== keaising@gmail.com&amp;#39; &amp;gt;&amp;gt; ~/.ssh/authorized_keys </description>
    </item>
    
    <item>
      <title>基于C#的蚁群算法实现</title>
      <link>https://shuxiao.wang/posts/ant-algs-based-on-csharp/</link>
      <pubDate>Sat, 25 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/posts/ant-algs-based-on-csharp/</guid>
      <description>这学期有门课，最优化与最优控制，任课老师任华玲，虽然在课堂上我什么都没有学到，但是最后任老师让每个人自己选一篇最优化方向的论文，把其中的算法</description>
    </item>
    
    <item>
      <title>Configuration</title>
      <link>https://shuxiao.wang/cs/config/</link>
      <pubDate>Wed, 01 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://shuxiao.wang/cs/config/</guid>
      <description>Shell export export GO111MODULE=on export GOPROXY=&amp;#39;https://goproxy.io&amp;#39; alias alias ll=&amp;#39;ls -al&amp;#39; alias goproxy=&amp;#39;export http_proxy=http://127.0.0.1:7777 https_proxy=http://127.0.0.1:7777&amp;#39; alias disproxy=&amp;#39;unset http_proxy https_proxy&amp;#39; .gitconfig [user] name = keaising email = keaising@gmail.com [core] editor = vi [color] ui = true [alias] co = checkout st = status br = branch ci = commit -m cod = checkout develop cor = checkout release com = checkout master pushm = push origin master pullm = pull -r origin</description>
    </item>
    
  </channel>
</rss>
